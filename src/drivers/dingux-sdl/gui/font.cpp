
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

#include "../dingoo.h"
#include "../dingoo-video.h"

#include "../dface.h"

#include "bitmap.h"
#include "font.h"
#include "gfceu320.h"

typedef struct _letter
{
    int x, y, w, h;
    int pre, pos;
} Letter;

static int g_max_height = 13;
static bitmap16 *g_font;
static Letter g_letters[] =
{
    /*" "*/ {0,0,2,12,0,5},
	/*"!"*/ {2,0,5,12,1,2},
	/*"""*/ {7,0,7,12,1,1},
	/*"#"*/ {14,0,9,12,0,0},
	/*"$"*/ {23,0,7,12,1,1},
	/*"%"*/ {30,0,8,12,0,0},
	/*"&"*/ {39,0,7,12,1,1},
	/*"'"*/ {46,0,4,12,2,2},
	/*"("*/ {50,0,4,12,2,2},
	/*")"*/ {54,0,4,12,2,2},
	/*"*"*/ {58,0,7,12,1,1},
	/*"+"*/ {65,0,7,12,1,2},
	/*","*/ {72,0,5,12,1,3},
	/*"-"*/ {77,0,7,12,1,1},
	/*"."*/ {84,0,4,12,1,3},
	/*"/"*/ {88,0,9,12,1,1},
	/*"0"*/ {97,0,9,12,0,0},
	/*"1"*/ {106,0,5,12,2,2},             
	/*"2"*/ {111,0,9,12,0,0},
	/*"3"*/ {120,0,9,12,0,0},
	/*"4"*/ {0,13,9,12,0,0},
	/*"5"*/ {9,13,9,12,0,0},
	/*"6"*/ {18,13,9,12,0,0},
	/*"7"*/ {27,13,9,12,0,0},
	/*"8"*/ {36,13,9,12,0,0},
	/*"9"*/ {45,13,9,12,0,0},
	/*":"*/ {54,13,4,12,2,3},
	/*";"*/ {58,13,5,12,2,3},
	/*"<"*/ {63,13,6,12,1,2},
	/*"="*/ {69,13,7,12,1,1},
	/*">"*/ {76,13,6,12,2,1},
	/*"?"*/ {82,13,9,12,0,0},
	/*"@"*/ {91,13,9,12,0,0},
	/*"A"*/ {100,13,9,12,0,0},
	/*"B"*/ {109,13,9,12,0,0},
	/*"C"*/ {118,13,9,12,0,0},
	/*"D"*/ {0,26,9,12,0,0},
	/*"E"*/ {9,26,9,12,0,0},
	/*"F"*/ {18,26,9,12,0,0},
	/*"G"*/ {27,26,9,12,0,0},
	/*"H"*/ {36,26,9,12,0,0},
	/*"I"*/ {45,26,5,12,0,0},
	/*"J"*/ {50,26,9,12,0,0},
	/*"K"*/ {59,26,9,12,0,0},
	/*"L"*/ {68,26,9,12,0,0},
	/*"M"*/ {77,26,9,12,0,0},
	/*"N"*/ {86,26,9,13,0,0},
	/*"O"*/ {95,26,9,13,0,0},
	/*"P"*/ {104,26,9,13,0,0},
	/*"Q"*/ {113,26,9,13,0,0},
	/*"R"*/ {0,39,9,13,0,0},
	/*"S"*/ {9,39,9,13,0,0},
	/*"T"*/ {18,39,9,13,0,0},
	/*"U"*/ {27,39,9,13,0,0},
	/*"V"*/ {36,39,9,13,0,0},
	/*"W"*/ {45,39,9,13,0,0},
	/*"X"*/ {54,39,9,13,0,0},
	/*"Y"*/ {63,39,9,13,0,0},
	/*"Z"*/ {72,39,9,13,0,0},
	/*"["*/ {81,39,4,13,2,2},
	/*"\"*/ {85,39,9,13,1,1},
	/*"]"*/ {94,39,3,13,2,2},
	/*"^"*/ {98,39,9,13,1,1},
	/*"_"*/ {107,39,9,13,0,0},
	/*"`"*/ {116,39,5,13,1,1},
	/*"a"*/ {100,13,9,13,0,0},
	/*"b"*/ {109,13,9,13,0,0},
	/*"c"*/ {118,13,9,13,0,0},
	/*"d"*/ {0,26,9,13,0,0},
	/*"e"*/ {9,26,9,13,0,0},
	/*"f"*/ {18,26,9,13,0,0},
	/*"g"*/ {27,26,9,12,0,0},
	/*"h"*/ {36,26,9,13,0,0},
	/*"i"*/ {45,26,5,13,0,0},
	/*"j"*/ {50,26,9,13,0,0},
	/*"k"*/ {59,26,9,13,0,0},
	/*"l"*/ {68,26,9,13,0,0},
	/*"m"*/ {77,26,9,13,0,0},
	/*"n"*/ {86,26,9,13,0,0},
	/*"o"*/ {95,26,9,13,0,0},
	/*"p"*/ {104,26,9,13,0,0},
	/*"q"*/ {113,26,9,13,0,0},
	/*"r"*/ {0,39,9,13,0,0},
	/*"s"*/ {9,39,9,13,0,0},
	/*"t"*/ {18,39,9,13,0,0},
	/*"u"*/ {27,39,9,13,0,0},
	/*"v"*/ {36,39,9,13,0,0},
	/*"w"*/ {45,39,9,13,0,0},
	/*"x"*/ {54,39,9,13,0,0},
	/*"y"*/ {63,39,9,13,0,0},
	/*"z"*/ {72,39,9,13,0,0},
	/*"{"*/ {121,39,5,13,2,3},
	/*"|"*/ {127,39,3,13,2,2},
	/*"}"*/ {0,52,5,13,3,2},
	/*"~"*/ {5,52,9,13,0,0},

	/*SELECTOR*/ {132,25,10,7,0,0},
	/*ROM*/ {132,12,36,12,0,0},
	/*SETTINGS*/ {132,0,65,12,0,0},
	/*NOPREVIEW*/ {145,25,54,8,0,0},
	/*LEFTARROW*/ {132,34,12,11,0,0},
	/*RIGHTARROW*/ {145,34,12,11,0,0},
    /*UPARROW*/ {160,36,9,6,0,0},
    /*DOWNARROW*/ {171,36,9,6,0,0},
    /*MAINSETTINGS*/ {132,70,94,12,0,0},
    /*VIDEOSETTINGS*/ {132,58,99,12,0,0},
    /*SOUNDSETTINGS*/ {132,46,103,12,0,0},
    /*BROWSER*/ {132,82,89,12,0,0}
};

int InitFont()
{
    // Load font image
    g_font = load_bmp_16bpp(gfceu320_sprites, 240, 240);
    if (g_font == NULL) return -1;

    return 0;
}

void KillFont()
{
    free_bitmap_16bpp(g_font);
}

#define COLOR_KEY 	dingoo_video_color15(255, 0 , 255)
int DrawChar(unsigned short *dest, uint8 c, int x, int y)
{
    Letter *l = &g_letters[c];

    int x0, y0;

    register int l_w = (x + l->w) > 320 ? 320 - x : l->w;
    register int src_inc = g_font->width - l->w;
    register int dst_inc = 320 - l->w;
    register uint16 *src = (uint16 *)g_font->data;
    register uint16 *dst = (uint16 *)dest;

    x += l->pre;

    src += (g_font->width)*l->y + l->x;
    dst += 320*y + x;

    for(y0 = 0; y0 < l->h; y0++) {
        for(x0 = 0; x0 < l_w; x0++) {
  	        if (*src != COLOR_KEY) 
		        *dst = *src;
    	    src++;
   	        dst++;
        }
        
        dst += dst_inc;
	    src += src_inc;
    }
    
    return l->w + l->pos;
} 

void DrawText(unsigned short *dest, const char *textmsg, int x, int y)
{
    if( textmsg == NULL ) return;

    char *str = (char *)textmsg;
    int x0 = x, y0 = y; 
    for(;*str;str++) {
	    if (*str == '\n') y0 += g_max_height;
    	else {
	        uint8 c = (*str-32)&0x7F;
            x0 += DrawChar(dest,c,x0,y0);

            if( x0 > 320 ) break;
	    }
    }
}

